{"ast":null,"code":"var _jsxFileName = \"/home/ray/projects/interview-assignments/frontend/src/components/slider/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport classnames from \"classnames\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet t = null;\nlet isStop = false;\n\nconst Slider = _s(useMemo(_c = _s(_ref => {\n  _s();\n\n  let {\n    duration = 2000,\n    speed = 180,\n    items\n  } = _ref;\n  const [curIndex, setCurIndex] = useState(0);\n  const size = items.length;\n  const clear = useCallback(() => {\n    t && clearInterval(t);\n  }, []);\n  const play = useCallback(() => {\n    t = setInterval(() => {\n      !isStop && setCurIndex(index => (index + 1) % size);\n    }, duration);\n  }, [size, duration]);\n  const handleOver = useCallback((index, isOver) => {\n    setCurIndex(index);\n    clear();\n    play();\n    isStop = isOver;\n  }, [play, clear]);\n  useEffect(() => {\n    play();\n    return () => {\n      clear();\n    };\n  }, [play, clear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(\"loop-list\", {\n        [`loop-list-item${curIndex}`]: true\n      }),\n      children: items.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loop-item\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loop-btn\",\n      children: items.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-btn\",\n          onMouseOver: () => handleOver(index, true),\n          onMouseOut: () => handleOver(index, false),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classnames(\"slider-btn-p\", {\n              active: index === curIndex\n            }),\n            style: {\n              animationDuration: `${duration}ms`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}, \"ok8Fc/hK83JVMmD0b/pQcT403a0=\")), \"ok8Fc/hK83JVMmD0b/pQcT403a0=\");\n\n_c2 = Slider;\nexport default Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slider$useMemo\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["/home/ray/projects/interview-assignments/frontend/src/components/slider/index.tsx"],"names":["React","useState","useEffect","useCallback","useMemo","classnames","t","isStop","Slider","duration","speed","items","curIndex","setCurIndex","size","length","clear","clearInterval","play","setInterval","index","handleOver","isOver","map","item","active","animationDuration"],"mappings":"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","sourcesContent":["import React, { FC, useState, useEffect, useCallback, useMemo } from \"react\";\nimport classnames from \"classnames\";\nimport \"./style.scss\";\n\ninterface SliderProps {\n  duration?: number;\n  speed?: number;\n  items: React.ReactElement[];\n}\n\nlet t: NodeJS.Timer | null = null;\nlet isStop: boolean = false;\n\nconst Slider: FC<SliderProps> = useMemo(\n  ({ duration = 2000, speed = 180, items }) => {\n    const [curIndex, setCurIndex] = useState(0);\n    const size = items.length;\n\n    const clear = useCallback(() => {\n      t && clearInterval(t);\n    }, []);\n\n    const play = useCallback(() => {\n      t = setInterval(() => {\n        !isStop && setCurIndex((index) => (index + 1) % size);\n      }, duration);\n    }, [size, duration]);\n\n    const handleOver = useCallback(\n      (index: number, isOver: boolean) => {\n        setCurIndex(index);\n        clear();\n        play();\n        isStop = isOver;\n      },\n      [play, clear]\n    );\n\n    useEffect(() => {\n      play();\n      return () => {\n        clear();\n      };\n    }, [play, clear]);\n\n    return (\n      <div className=\"slider-wrapper\">\n        <div\n          className={classnames(\"loop-list\", {\n            [`loop-list-item${curIndex}`]: true,\n          })}>\n          {items.map((item, index) => {\n            return (\n              <div className=\"loop-item\" key={index}>\n                {item}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"loop-btn\">\n          {items.map((item, index) => {\n            return (\n              <div\n                className=\"slider-btn\"\n                onMouseOver={() => handleOver(index, true)}\n                onMouseOut={() => handleOver(index, false)}>\n                <span\n                  className={classnames(\"slider-btn-p\", {\n                    active: index === curIndex,\n                  })}\n                  style={{ animationDuration: `${duration}ms` }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}